/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CarDealerSystem;

import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.beans.binding.Bindings.not;
import static javax.management.Query.not;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import static javax.swing.text.html.HTML.Attribute.ID;

/**
 *
 * @author Angela
 */
public class EmpTimesheet extends javax.swing.JInternalFrame {
    
    Connection con;
    int hour,second,minute;

    
        Timer t;
    SimpleDateFormat st;
    public void Calendar(){


        t = new Timer (0,new ActionListener(){
               @Override
               public void actionPerformed (ActionEvent e){
                   //throw new UnsopportedOperationException("Not supported yet.")
               
                   Date dt = new Date();
                   st = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss a");
                   
                   String tt = st.format(dt);
                    jtxtclock.setText(tt);
        }
    });
       t.start(); 
    }
    
    
    public EmpTimesheet() {
        initComponents();
        Calendar();
        
        String url = "jdbc:mysql://localhost:3306/car_dealers";
        String user = "root";
        String pass = "";
        try{
            con= DriverManager.getConnection(url,user,pass);
        }catch(Exception ex){
            System.out.println("Error:" + ex.getMessage());
        }

        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0)); //no space
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
        
        tbltimesheet.getTableHeader().setFont(new Font ("Segoe UI", Font.PLAIN,14));
        tbltimesheet.getTableHeader().setOpaque(false);
        tbltimesheet.getTableHeader().setForeground(new Color(204,0,0));
        tbltimesheet.setRowHeight(25);
        
        tbltimesheet1.getTableHeader().setFont(new Font ("Segoe UI", Font.PLAIN,14));
        tbltimesheet1.getTableHeader().setOpaque(false);
        tbltimesheet1.getTableHeader().setForeground(new Color(204,0,0));
        tbltimesheet1.setRowHeight(25);
        
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Collaborativedesktop = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltimesheet = new javax.swing.JTable();
        CheckTimesheet = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jtxtemployee = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxttimesheet = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtclock = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        LogOut = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jtxtmanager = new javax.swing.JTextField();
        jtxttimesheet1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbltimesheet1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1021, 526));
        setMinimumSize(new java.awt.Dimension(1021, 526));
        setPreferredSize(new java.awt.Dimension(1021, 526));
        getContentPane().setLayout(null);

        jScrollPane2.setBorder(null);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(1002, 500));

        Collaborativedesktop.setBackground(new java.awt.Color(204, 0, 0));
        Collaborativedesktop.setMaximumSize(new java.awt.Dimension(811, 465));
        Collaborativedesktop.setMinimumSize(new java.awt.Dimension(811, 465));
        Collaborativedesktop.setPreferredSize(new java.awt.Dimension(811, 1200));
        Collaborativedesktop.setLayout(null);

        tbltimesheet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TimeSheetID", "EmployeeID", "Date", "ClockInTime", "ClockOutTime", "TotalHoursWorked"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltimesheet.setFocusable(false);
        tbltimesheet.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbltimesheet.setRowHeight(25);
        tbltimesheet.getTableHeader().setReorderingAllowed(false);
        tbltimesheet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltimesheetMouseClicked(evt);
            }
        });
        tbltimesheet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbltimesheetKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbltimesheet);
        if (tbltimesheet.getColumnModel().getColumnCount() > 0) {
            tbltimesheet.getColumnModel().getColumn(0).setResizable(false);
            tbltimesheet.getColumnModel().getColumn(1).setResizable(false);
            tbltimesheet.getColumnModel().getColumn(2).setResizable(false);
            tbltimesheet.getColumnModel().getColumn(3).setResizable(false);
            tbltimesheet.getColumnModel().getColumn(4).setResizable(false);
            tbltimesheet.getColumnModel().getColumn(5).setResizable(false);
        }

        Collaborativedesktop.add(jScrollPane1);
        jScrollPane1.setBounds(10, 310, 960, 200);

        CheckTimesheet.setText("Check TimeSheet");
        CheckTimesheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckTimesheetActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(CheckTimesheet);
        CheckTimesheet.setBounds(10, 270, 200, 30);

        Add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(Add);
        Add.setBounds(320, 240, 90, 30);

        Delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Delete.setText("Delete");
        Delete.setPreferredSize(new java.awt.Dimension(67, 23));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(Delete);
        Delete.setBounds(520, 240, 90, 30);

        Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Update.setText("Update ");
        Update.setPreferredSize(new java.awt.Dimension(67, 23));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(Update);
        Update.setBounds(410, 240, 110, 30);

        jtxtemployee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtemployeeActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jtxtemployee);
        jtxtemployee.setBounds(450, 170, 160, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("EmployeeID");
        Collaborativedesktop.add(jLabel4);
        jLabel4.setBounds(320, 170, 108, 30);

        jtxttimesheet.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Collaborativedesktop.add(jtxttimesheet);
        jtxttimesheet.setBounds(450, 110, 160, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("TimeSheetID ");
        Collaborativedesktop.add(jLabel3);
        jLabel3.setBounds(320, 110, 130, 30);

        jtxtclock.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jtxtclock.setForeground(new java.awt.Color(255, 255, 255));
        Collaborativedesktop.add(jtxtclock);
        jtxtclock.setBounds(120, 30, 340, 21);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CLOCK ");
        Collaborativedesktop.add(jLabel9);
        jLabel9.setBounds(20, 20, 87, 38);

        LogOut.setText("LOGOUT");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(LogOut);
        LogOut.setBounds(850, 270, 120, 30);

        jButton5.setText("LOGOUT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jButton5);
        jButton5.setBounds(870, 860, 100, 30);

        jButton1.setText("Check TimeSheet");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jButton1);
        jButton1.setBounds(10, 860, 200, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jButton2);
        jButton2.setBounds(330, 810, 90, 30);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Update ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jButton4);
        jButton4.setBounds(420, 810, 110, 30);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Collaborativedesktop.add(jButton3);
        jButton3.setBounds(530, 810, 90, 30);

        jtxtmanager.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtmanager.setMinimumSize(new java.awt.Dimension(160, 30));
        jtxtmanager.setPreferredSize(new java.awt.Dimension(160, 30));
        Collaborativedesktop.add(jtxtmanager);
        jtxtmanager.setBounds(460, 760, 160, 30);

        jtxttimesheet1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxttimesheet1.setMinimumSize(new java.awt.Dimension(160, 30));
        jtxttimesheet1.setPreferredSize(new java.awt.Dimension(160, 30));
        Collaborativedesktop.add(jtxttimesheet1);
        jtxttimesheet1.setBounds(460, 710, 160, 30);

        jLabel19.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("EMPLOYEE");
        Collaborativedesktop.add(jLabel19);
        jLabel19.setBounds(20, 60, 180, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ManagerID");
        Collaborativedesktop.add(jLabel2);
        jLabel2.setBounds(340, 760, 98, 30);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TimeSheetID ");
        Collaborativedesktop.add(jLabel1);
        jLabel1.setBounds(330, 710, 130, 30);

        tbltimesheet1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TimeSheetID", "MangerID", "Date", "ClockInTime", "ClockOutTime", "TotalHoursWorked"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltimesheet1.setFocusable(false);
        tbltimesheet1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbltimesheet1.setRowHeight(25);
        tbltimesheet1.getTableHeader().setReorderingAllowed(false);
        tbltimesheet1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltimesheet1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbltimesheet1);

        Collaborativedesktop.add(jScrollPane3);
        jScrollPane3.setBounds(10, 900, 960, 270);

        jLabel20.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("MANAGER");
        Collaborativedesktop.add(jLabel20);
        jLabel20.setBounds(20, 620, 140, 40);

        jScrollPane2.setViewportView(Collaborativedesktop);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 1000, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckTimesheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckTimesheetActionPerformed
        // TODO add your handling code here:
        String sql = "select * from EmployeeTimeSheet";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();
            model.setRowCount(0);
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6) });
            }
        }catch(Exception ex){
            System.out.println("Error : " +ex.getMessage());
        }
    }//GEN-LAST:event_CheckTimesheetActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        Date date = new Date();
                        
        SimpleDateFormat timeStampD = new SimpleDateFormat("yyyy-MM-dd");
        String DATE = timeStampD.format(date);

        String timeStamp = new SimpleDateFormat("HH:mm:ss ").format(Calendar.getInstance().getTime());
        String sql = "INSERT INTO EmployeeTimeSheet (TimeSheetID, EmployeeID, Date, ClockInTime) VALUES (?,?, '"+DATE+"', '"+timeStamp+"')";
    
        try {

            PreparedStatement pst = con.prepareStatement(sql);
            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();
            pst.setString(1, jtxttimesheet.getText());
            pst.setString(2, jtxtemployee.getText());

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Inserted Successfully");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_AddActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        String sql ="DELETE FROM EmployeeTimeSheet WHERE TimeSheetID =?";
        try{

            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();

            pst.setString(1,jtxttimesheet.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Deleted Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        String sql = "UPDATE EmployeeTimeSheet SET  EmployeeID=? WHERE TimesheetID=?";
        try{

            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();

            pst.setString(2,jtxttimesheet.getText());
            pst.setString(1,jtxtemployee.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void jtxtemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtemployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtemployeeActionPerformed

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        // TODO add your handling code here:
        String Time_In=null, Time_Out = null,query, TS = null ;
        this.toBack();
        setVisible(false);
        LoginForm newLoginForm = new LoginForm();
        newLoginForm.setVisible(true);
        newLoginForm.toFront();
        
        Statement pst;
        Statement sts;
        int notFound = 0;
        int not = 0;
        String text = jtxttimesheet.getText();
        String emp = jtxtemployee.getText();
        try {
            pst = con.createStatement();
            sts = con.createStatement();
            
                    query = "SELECT * FROM EmployeeTimeSheet WHERE TimeSheetID= '"+text+"'" ;
                    ResultSet rs= sts.executeQuery(query);
                    while(rs.next()){
                         TS = rs.getString("EmployeeID");
                         notFound = 1;
                     }
            if(notFound == 1 && emp.equals(TS)){
                String timeStamp = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
                String query_1 = "UPDATE `EmployeeTimeSheet` SET `ClockOutTime` ='"+timeStamp+"' WHERE TimeSheetID='"+text+"'" ;
                pst.executeUpdate(query_1);
                
                        String in = "SELECT * from EmployeeTimeSheet WHERE TimesheetID = '"+text+"' ";
                        ResultSet TI = sts.executeQuery(in);
                            if(TI.next()){
                                Time_In = TI.getString("ClockInTime");
                                Time_Out = TI.getString("ClockOutTime"); 
                                not = 1;
                            }
                            
                        if(not ==1){
                            DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                          
                            Date OUT = dateFormat.parse(Time_Out);
                            Date IN = dateFormat.parse(Time_In);
                            
                            long duration = OUT.getTime() - IN.getTime();
                            long seconds = duration / 1000;
                            long hours = seconds / 3600;
                            long minutes = (seconds % 3600) / 60;

                            String ETime= " "+hours+" hours "+minutes+" minutes ";
                            
                            String sqL1 = "UPDATE EmployeeTimeSheet SET TotalHoursWorked = '"+ETime+"'  WHERE TimeSheetID = '"+text+"' ";
                            PreparedStatement pr = con.prepareStatement(sqL1);
                            pr.executeUpdate();
                        }
                    
                    sts.execute(in);

            }
            
                } catch(Exception e){
                 System.out.println("Error!" + e.getMessage());
             }
        //end
    }//GEN-LAST:event_LogOutActionPerformed

    private void tbltimesheetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltimesheetMouseClicked
        // TODO add your handling code here:DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();
        
        DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();
        
        String tblTimeSheetID = model.getValueAt(tbltimesheet.getSelectedRow(),0).toString();
        String tblEmployeeID = model.getValueAt(tbltimesheet.getSelectedRow(),1).toString();
      
        
       jtxttimesheet.setText(tblTimeSheetID);
       jtxtemployee.setText(tblEmployeeID);
    }//GEN-LAST:event_tbltimesheetMouseClicked

    private void tbltimesheetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltimesheetKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbltimesheetKeyReleased

    private void tbltimesheet1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltimesheet1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbltimesheet1.getModel();

        String tblTimeSheet = model.getValueAt(tbltimesheet1.getSelectedRow(),0).toString();
        String tblManagerID = model.getValueAt(tbltimesheet1.getSelectedRow(),1).toString();
        
        jtxttimesheet1.setText(tblTimeSheet);
        jtxtmanager.setText(tblManagerID);
    }//GEN-LAST:event_tbltimesheet1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //LOGOUT MANAGER
        String Time_In=null, Time_Out = null,query, TS = null ;
        this.toBack();
        setVisible(false);
        LoginForm newLoginForm = new LoginForm();
        newLoginForm.setVisible(true);
        newLoginForm.toFront();
        
        Statement pst;
        Statement sts;
        int notFound = 0;
        int not = 0;
        String text = jtxttimesheet1.getText();
        String emp = jtxtmanager.getText();
        try {
            pst = con.createStatement();
            sts = con.createStatement();
            
                    query = "SELECT * FROM ManagerTimeSheet WHERE TimeSheetID= '"+text+"'" ;
                    ResultSet rs= sts.executeQuery(query);
                    while(rs.next()){
                         TS = rs.getString("ManagerID");
                         notFound = 1;
                     }
            if(notFound == 1 && emp.equals(TS)){
                String timeStamp = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
                String query_1 = "UPDATE `ManagerTimeSheet` SET `ClockOutTime` ='"+timeStamp+"' WHERE TimeSheetID='"+text+"'" ;
                pst.executeUpdate(query_1);
                
                        String in = "SELECT * from ManagerTimeSheet WHERE TimesheetID = '"+text+"' ";
                        ResultSet TI = sts.executeQuery(in);
                            if(TI.next()){
                                Time_In = TI.getString("ClockInTime");
                                Time_Out = TI.getString("ClockOutTime"); 
                                not = 1;
                            }
                            
                        if(not ==1){
                            DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                          
                            Date OUT = dateFormat.parse(Time_Out);
                            Date IN = dateFormat.parse(Time_In);
                            
                            long duration = OUT.getTime() - IN.getTime();
                            long seconds = duration / 1000;
                            long hours = seconds / 3600;
                            long minutes = (seconds % 3600) / 60;

                            String ETime= " "+hours+" hours "+minutes+" minutes ";
                            
                            String sqL1 = "UPDATE ManagerTimeSheet SET TotalHoursWorked = '"+ETime+"'  WHERE TimeSheetID = '"+text+"' ";
                            PreparedStatement pr = con.prepareStatement(sqL1);
                            pr.executeUpdate();
                        }
                    
                    sts.execute(in);

            }
            
                } catch(Exception e){
                 System.out.println("Error!" + e.getMessage());
             }
        //end
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sql = "select * from ManagerTimeSheet";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tbltimesheet1.getModel();
            model.setRowCount(0);
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6) });
            }
        }catch(Exception ex){
            System.out.println("Error : " +ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling cod
        try {

                        Date date = new Date();
                        
                        SimpleDateFormat timeStampD = new SimpleDateFormat("yyyy-MM-dd");
                        String DATE = timeStampD.format(date);

                        String timeStamp = new SimpleDateFormat("HH:mm:ss ").format(Calendar.getInstance().getTime());
                        String sql = "INSERT INTO ManagerTimeSheet (TimeSheetID, ManagerID, Date, ClockInTime) VALUES (?,?, '"+DATE+"', '"+timeStamp+"')";
                    PreparedStatement pst = con.prepareStatement(sql);
                    DefaultTableModel model = (DefaultTableModel) tbltimesheet1.getModel();
                    pst.setString(1, jtxttimesheet1.getText());
                    pst.setString(2, jtxtmanager.getText());
                    pst.executeUpdate();
    
    JOptionPane.showMessageDialog(null, "Inserted Successfully");
} catch (SQLException | HeadlessException ex) {
    JOptionPane.showMessageDialog(null, ex);
}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String sql = "UPDATE ManagerTimesheet SET ManagerID = ? WHERE TimeSheetID = ?";
        try{

            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();

            pst.setString(2,jtxttimesheet1.getText());
            pst.setString(1,jtxtmanager.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String sql ="DELETE FROM ManagerTimeSheet WHERE TimeSheetID =?";
        try{

            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) tbltimesheet.getModel();

            pst.setString(1,jtxttimesheet.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Deleted Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton CheckTimesheet;
    private javax.swing.JPanel Collaborativedesktop;
    private javax.swing.JButton Delete;
    private javax.swing.JButton LogOut;
    private javax.swing.JButton Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jtxtclock;
    private javax.swing.JTextField jtxtemployee;
    private javax.swing.JTextField jtxtmanager;
    private javax.swing.JTextField jtxttimesheet;
    private javax.swing.JTextField jtxttimesheet1;
    private javax.swing.JTable tbltimesheet;
    private javax.swing.JTable tbltimesheet1;
    // End of variables declaration//GEN-END:variables
 
    private Timestamp getClockinTime(String timesheetId) throws SQLException {
    String sql = "SELECT ClockinTime FROM EmployeeTimeSheet WHERE TimesheetID=?";
    PreparedStatement pst = con.prepareStatement(sql);
    pst.setString(1, timesheetId);
    ResultSet rs = pst.executeQuery();
    if (rs.next()) {
        return rs.getTimestamp("ClockinTime");
    } else {
        return null;
    }
}

    
    
}
   

 
